<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY version SYSTEM "version.xml">
]>
<refentry id="libudev-udev-enumerate">
<refmeta>
<refentrytitle role="top_of_page" id="libudev-udev-enumerate.top_of_page">udev_enumerate</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  LIBUDEV Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>udev_enumerate</refname>
<refpurpose>lookup and sort sys devices</refpurpose>
</refnamediv>

<refsynopsisdiv id="libudev-udev-enumerate.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>struct              <link linkend="udev-enumerate">udev_enumerate</link>;
struct <link linkend="udev-enumerate"><returnvalue>udev_enumerate</returnvalue></link> * <link linkend="udev-enumerate-ref">udev_enumerate_ref</link>              (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>);
struct <link linkend="udev-enumerate"><returnvalue>udev_enumerate</returnvalue></link> * <link linkend="udev-enumerate-unref">udev_enumerate_unref</link>            (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>);
struct <link linkend="udev"><returnvalue>udev</returnvalue></link> *       <link linkend="udev-enumerate-get-udev">udev_enumerate_get_udev</link>             (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>);
struct <link linkend="udev-enumerate"><returnvalue>udev_enumerate</returnvalue></link> * <link linkend="udev-enumerate-new">udev_enumerate_new</link>              (<parameter><type>struct udev</type> *udev</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="udev-enumerate-add-match-subsystem">udev_enumerate_add_match_subsystem</link>  (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *subsystem</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="udev-enumerate-add-nomatch-subsystem">udev_enumerate_add_nomatch_subsystem</link>
                                                        (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *subsystem</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="udev-enumerate-add-match-sysattr">udev_enumerate_add_match_sysattr</link>    (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *sysattr</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *value</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="udev-enumerate-add-nomatch-sysattr">udev_enumerate_add_nomatch_sysattr</link>  (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *sysattr</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *value</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="udev-enumerate-add-match-property">udev_enumerate_add_match_property</link>   (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *property</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *value</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="udev-enumerate-add-match-tag">udev_enumerate_add_match_tag</link>        (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *tag</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="udev-enumerate-add-match-parent">udev_enumerate_add_match_parent</link>     (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>,
                                                         <parameter><type>struct udev_device</type> *parent</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="udev-enumerate-add-match-is-initialized">udev_enumerate_add_match_is_initialized</link>
                                                        (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="udev-enumerate-add-match-sysname">udev_enumerate_add_match_sysname</link>    (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *sysname</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="udev-enumerate-add-syspath">udev_enumerate_add_syspath</link>          (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *syspath</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="udev-enumerate-scan-devices">udev_enumerate_scan_devices</link>         (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="udev-enumerate-scan-subsystems">udev_enumerate_scan_subsystems</link>      (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>);
struct <link linkend="udev-list-entry"><returnvalue>udev_list_entry</returnvalue></link> * <link linkend="udev-enumerate-get-list-entry">udev_enumerate_get_list_entry</link>  (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>);
</synopsis>
</refsynopsisdiv>

<refsect1 id="libudev-udev-enumerate.description" role="desc">
<title role="desc.title">Description</title>
<para>
Lookup devices in the sys filesystem, filter devices by properties,
and return a sorted list of devices.
</para>
</refsect1>
<refsect1 id="libudev-udev-enumerate.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="udev-enumerate" role="struct">
<title>struct udev_enumerate</title>
<indexterm zone="udev-enumerate"><primary sortas="enumerate">udev_enumerate</primary></indexterm>
<programlisting>struct udev_enumerate;</programlisting>
<para>
Opaque object representing one device lookup/sort context.
</para></refsect2>
<refsect2 id="udev-enumerate-ref" role="function">
<title>udev_enumerate_ref ()</title>
<indexterm zone="udev-enumerate-ref"><primary sortas="enumerate_ref">udev_enumerate_ref</primary></indexterm>
<programlisting>struct <link linkend="udev-enumerate"><returnvalue>udev_enumerate</returnvalue></link> * udev_enumerate_ref              (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>);</programlisting>
<para>
Take a reference of a enumeration context.
</para><variablelist role="params">
<varlistentry><term><parameter>udev_enumerate</parameter>&#160;:</term>
<listitem><simpara>context</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>the passed enumeration context</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="udev-enumerate-unref" role="function">
<title>udev_enumerate_unref ()</title>
<indexterm zone="udev-enumerate-unref"><primary sortas="enumerate_unref">udev_enumerate_unref</primary></indexterm>
<programlisting>struct <link linkend="udev-enumerate"><returnvalue>udev_enumerate</returnvalue></link> * udev_enumerate_unref            (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>);</programlisting>
<para>
Drop a reference of an enumeration context. If the refcount reaches zero,
all resources of the enumeration context will be released.
</para><variablelist role="params">
<varlistentry><term><parameter>udev_enumerate</parameter>&#160;:</term>
<listitem><simpara>context</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara><link linkend="NULL:CAPS"><type>NULL</type></link></simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="udev-enumerate-get-udev" role="function">
<title>udev_enumerate_get_udev ()</title>
<indexterm zone="udev-enumerate-get-udev"><primary sortas="enumerate_get_udev">udev_enumerate_get_udev</primary></indexterm>
<programlisting>struct <link linkend="udev"><returnvalue>udev</returnvalue></link> *       udev_enumerate_get_udev             (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>);</programlisting>
<para>
Get the udev library context.
</para><variablelist role="params">
<varlistentry><term><parameter>udev_enumerate</parameter>&#160;:</term>
<listitem><simpara>context</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>a pointer to the context.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="udev-enumerate-new" role="function">
<title>udev_enumerate_new ()</title>
<indexterm zone="udev-enumerate-new"><primary sortas="enumerate_new">udev_enumerate_new</primary></indexterm>
<programlisting>struct <link linkend="udev-enumerate"><returnvalue>udev_enumerate</returnvalue></link> * udev_enumerate_new              (<parameter><type>struct udev</type> *udev</parameter>);</programlisting>
<para>
Create an enumeration context to scan /sys.
</para><variablelist role="params">
<varlistentry><term><parameter>udev</parameter>&#160;:</term>
<listitem><simpara>udev library context</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>an enumeration context.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="udev-enumerate-add-match-subsystem" role="function">
<title>udev_enumerate_add_match_subsystem ()</title>
<indexterm zone="udev-enumerate-add-match-subsystem"><primary sortas="enumerate_add_match_subsystem">udev_enumerate_add_match_subsystem</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 udev_enumerate_add_match_subsystem  (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *subsystem</parameter>);</programlisting>
<para>
Match only devices belonging to a certain kernel subsystem.
</para><variablelist role="params">
<varlistentry><term><parameter>udev_enumerate</parameter>&#160;:</term>
<listitem><simpara>context</simpara></listitem></varlistentry>
<varlistentry><term><parameter>subsystem</parameter>&#160;:</term>
<listitem><simpara>filter for a subsystem of the device to include in the list</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>0 on success, otherwise a negative error value.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="udev-enumerate-add-nomatch-subsystem" role="function">
<title>udev_enumerate_add_nomatch_subsystem ()</title>
<indexterm zone="udev-enumerate-add-nomatch-subsystem"><primary sortas="enumerate_add_nomatch_subsystem">udev_enumerate_add_nomatch_subsystem</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 udev_enumerate_add_nomatch_subsystem
                                                        (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *subsystem</parameter>);</programlisting>
<para>
Match only devices not belonging to a certain kernel subsystem.
</para><variablelist role="params">
<varlistentry><term><parameter>udev_enumerate</parameter>&#160;:</term>
<listitem><simpara>context</simpara></listitem></varlistentry>
<varlistentry><term><parameter>subsystem</parameter>&#160;:</term>
<listitem><simpara>filter for a subsystem of the device to exclude from the list</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>0 on success, otherwise a negative error value.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="udev-enumerate-add-match-sysattr" role="function">
<title>udev_enumerate_add_match_sysattr ()</title>
<indexterm zone="udev-enumerate-add-match-sysattr"><primary sortas="enumerate_add_match_sysattr">udev_enumerate_add_match_sysattr</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 udev_enumerate_add_match_sysattr    (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *sysattr</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *value</parameter>);</programlisting>
<para>
Match only devices with a certain /sys device attribute.
</para><variablelist role="params">
<varlistentry><term><parameter>udev_enumerate</parameter>&#160;:</term>
<listitem><simpara>context</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sysattr</parameter>&#160;:</term>
<listitem><simpara>filter for a sys attribute at the device to include in the list</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara>optional value of the sys attribute</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>0 on success, otherwise a negative error value.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="udev-enumerate-add-nomatch-sysattr" role="function">
<title>udev_enumerate_add_nomatch_sysattr ()</title>
<indexterm zone="udev-enumerate-add-nomatch-sysattr"><primary sortas="enumerate_add_nomatch_sysattr">udev_enumerate_add_nomatch_sysattr</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 udev_enumerate_add_nomatch_sysattr  (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *sysattr</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *value</parameter>);</programlisting>
<para>
Match only devices not having a certain /sys device attribute.
</para><variablelist role="params">
<varlistentry><term><parameter>udev_enumerate</parameter>&#160;:</term>
<listitem><simpara>context</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sysattr</parameter>&#160;:</term>
<listitem><simpara>filter for a sys attribute at the device to exclude from the list</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara>optional value of the sys attribute</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>0 on success, otherwise a negative error value.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="udev-enumerate-add-match-property" role="function">
<title>udev_enumerate_add_match_property ()</title>
<indexterm zone="udev-enumerate-add-match-property"><primary sortas="enumerate_add_match_property">udev_enumerate_add_match_property</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 udev_enumerate_add_match_property   (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *property</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *value</parameter>);</programlisting>
<para>
Match only devices with a certain property.
</para><variablelist role="params">
<varlistentry><term><parameter>udev_enumerate</parameter>&#160;:</term>
<listitem><simpara>context</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property</parameter>&#160;:</term>
<listitem><simpara>filter for a property of the device to include in the list</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara>value of the property</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>0 on success, otherwise a negative error value.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="udev-enumerate-add-match-tag" role="function">
<title>udev_enumerate_add_match_tag ()</title>
<indexterm zone="udev-enumerate-add-match-tag"><primary sortas="enumerate_add_match_tag">udev_enumerate_add_match_tag</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 udev_enumerate_add_match_tag        (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *tag</parameter>);</programlisting>
<para>
Match only devices with a certain tag.
</para><variablelist role="params">
<varlistentry><term><parameter>udev_enumerate</parameter>&#160;:</term>
<listitem><simpara>context</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tag</parameter>&#160;:</term>
<listitem><simpara>filter for a tag of the device to include in the list</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>0 on success, otherwise a negative error value.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="udev-enumerate-add-match-parent" role="function">
<title>udev_enumerate_add_match_parent ()</title>
<indexterm zone="udev-enumerate-add-match-parent"><primary sortas="enumerate_add_match_parent">udev_enumerate_add_match_parent</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 udev_enumerate_add_match_parent     (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>,
                                                         <parameter><type>struct udev_device</type> *parent</parameter>);</programlisting>
<para>
Return the devices on the subtree of one given device. The parent
itself is included in the list.
</para>
<para>
A reference for the device is held until the udev_enumerate context
is cleaned up.
</para><variablelist role="params">
<varlistentry><term><parameter>udev_enumerate</parameter>&#160;:</term>
<listitem><simpara>context</simpara></listitem></varlistentry>
<varlistentry><term><parameter>parent</parameter>&#160;:</term>
<listitem><simpara>parent device where to start searching</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>0 on success, otherwise a negative error value.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="udev-enumerate-add-match-is-initialized" role="function">
<title>udev_enumerate_add_match_is_initialized ()</title>
<indexterm zone="udev-enumerate-add-match-is-initialized"><primary sortas="enumerate_add_match_is_initialized">udev_enumerate_add_match_is_initialized</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 udev_enumerate_add_match_is_initialized
                                                        (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>);</programlisting>
<para>
Match only devices which udev has set up already. This makes
sure, that the device node permissions and context are properly set
and that network devices are fully renamed.
</para>
<para>
Usually, devices which are found in the kernel but not already
handled by udev, have still pending events. Services should subscribe
to monitor events and wait for these devices to become ready, instead
of using uninitialized devices.
</para>
<para>
For now, this will not affect devices which do not have a device node
and are not network interfaces.
</para><variablelist role="params">
<varlistentry><term><parameter>udev_enumerate</parameter>&#160;:</term>
<listitem><simpara>context</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>0 on success, otherwise a negative error value.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="udev-enumerate-add-match-sysname" role="function">
<title>udev_enumerate_add_match_sysname ()</title>
<indexterm zone="udev-enumerate-add-match-sysname"><primary sortas="enumerate_add_match_sysname">udev_enumerate_add_match_sysname</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 udev_enumerate_add_match_sysname    (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *sysname</parameter>);</programlisting>
<para>
Match only devices with a given /sys device name.
</para><variablelist role="params">
<varlistentry><term><parameter>udev_enumerate</parameter>&#160;:</term>
<listitem><simpara>context</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sysname</parameter>&#160;:</term>
<listitem><simpara>filter for the name of the device to include in the list</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>0 on success, otherwise a negative error value.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="udev-enumerate-add-syspath" role="function">
<title>udev_enumerate_add_syspath ()</title>
<indexterm zone="udev-enumerate-add-syspath"><primary sortas="enumerate_add_syspath">udev_enumerate_add_syspath</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 udev_enumerate_add_syspath          (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *syspath</parameter>);</programlisting>
<para>
Add a device to the list of devices, to retrieve it back sorted in dependency order.
</para><variablelist role="params">
<varlistentry><term><parameter>udev_enumerate</parameter>&#160;:</term>
<listitem><simpara>context</simpara></listitem></varlistentry>
<varlistentry><term><parameter>syspath</parameter>&#160;:</term>
<listitem><simpara>path of a device</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>0 on success, otherwise a negative error value.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="udev-enumerate-scan-devices" role="function">
<title>udev_enumerate_scan_devices ()</title>
<indexterm zone="udev-enumerate-scan-devices"><primary sortas="enumerate_scan_devices">udev_enumerate_scan_devices</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 udev_enumerate_scan_devices         (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>);</programlisting>
<para>
Scan /sys for all devices which match the given filters. No matches
will return all currently available devices.
</para><variablelist role="params">
<varlistentry><term><parameter>udev_enumerate</parameter>&#160;:</term>
<listitem><simpara>udev enumeration context</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>0 on success, otherwise a negative error value.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="udev-enumerate-scan-subsystems" role="function">
<title>udev_enumerate_scan_subsystems ()</title>
<indexterm zone="udev-enumerate-scan-subsystems"><primary sortas="enumerate_scan_subsystems">udev_enumerate_scan_subsystems</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 udev_enumerate_scan_subsystems      (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>);</programlisting>
<para>
Scan /sys for all kernel subsystems, including buses, classes, drivers.
</para><variablelist role="params">
<varlistentry><term><parameter>udev_enumerate</parameter>&#160;:</term>
<listitem><simpara>udev enumeration context</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>0 on success, otherwise a negative error value.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="udev-enumerate-get-list-entry" role="function">
<title>udev_enumerate_get_list_entry ()</title>
<indexterm zone="udev-enumerate-get-list-entry"><primary sortas="enumerate_get_list_entry">udev_enumerate_get_list_entry</primary></indexterm>
<programlisting>struct <link linkend="udev-list-entry"><returnvalue>udev_list_entry</returnvalue></link> * udev_enumerate_get_list_entry  (<parameter><type>struct udev_enumerate</type> *udev_enumerate</parameter>);</programlisting>
<para>
Get the first entry of the sorted list of device paths.
</para><variablelist role="params">
<varlistentry><term><parameter>udev_enumerate</parameter>&#160;:</term>
<listitem><simpara>context</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>a udev_list_entry.</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

</refentry>
