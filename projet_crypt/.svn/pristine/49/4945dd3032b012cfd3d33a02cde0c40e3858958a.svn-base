<FUNCTION>
<NAME>udev_ref</NAME>
<RETURNS>struct udev  *</RETURNS>
struct udev *udev 
</FUNCTION>
<FUNCTION>
<NAME>udev_unref</NAME>
<RETURNS>struct udev  *</RETURNS>
struct udev *udev 
</FUNCTION>
<FUNCTION>
<NAME>udev_new</NAME>
<RETURNS>struct udev  *</RETURNS>
void 
</FUNCTION>
<FUNCTION>
<NAME>udev_set_log_fn</NAME>
<RETURNS>void  </RETURNS>
struct udev *udev, void (*log_fn)(struct udev *udev, int priority, const char *file, int line, const char *fn, const char *format, va_list args) 
</FUNCTION>
<FUNCTION>
<NAME>udev_get_log_priority</NAME>
<RETURNS>int  </RETURNS>
struct udev *udev 
</FUNCTION>
<FUNCTION>
<NAME>udev_set_log_priority</NAME>
<RETURNS>void  </RETURNS>
struct udev *udev, int priority 
</FUNCTION>
<FUNCTION>
<NAME>udev_get_userdata</NAME>
<RETURNS>void  *</RETURNS>
struct udev *udev 
</FUNCTION>
<FUNCTION>
<NAME>udev_set_userdata</NAME>
<RETURNS>void  </RETURNS>
struct udev *udev, void *userdata 
</FUNCTION>
<FUNCTION>
<NAME>udev_list_entry_get_next</NAME>
<RETURNS>struct udev_list_entry  *</RETURNS>
struct udev_list_entry *list_entry 
</FUNCTION>
<FUNCTION>
<NAME>udev_list_entry_get_by_name</NAME>
<RETURNS>struct udev_list_entry  *</RETURNS>
struct udev_list_entry *list_entry, const char *name 
</FUNCTION>
<FUNCTION>
<NAME>udev_list_entry_get_name</NAME>
<RETURNS>const char  *</RETURNS>
struct udev_list_entry *list_entry 
</FUNCTION>
<FUNCTION>
<NAME>udev_list_entry_get_value</NAME>
<RETURNS>const char  *</RETURNS>
struct udev_list_entry *list_entry 
</FUNCTION>
<MACRO>
<NAME>udev_list_entry_foreach</NAME>
#define udev_list_entry_foreach(list_entry, first_entry) \
        for (list_entry = first_entry; \
             list_entry != NULL; \
             list_entry = udev_list_entry_get_next(list_entry))
</MACRO>
<FUNCTION>
<NAME>udev_device_ref</NAME>
<RETURNS>struct udev_device  *</RETURNS>
struct udev_device *udev_device 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_unref</NAME>
<RETURNS>struct udev_device  *</RETURNS>
struct udev_device *udev_device 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_get_udev</NAME>
<RETURNS>struct udev  *</RETURNS>
struct udev_device *udev_device 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_new_from_syspath</NAME>
<RETURNS>struct udev_device  *</RETURNS>
struct udev *udev, const char *syspath 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_new_from_devnum</NAME>
<RETURNS>struct udev_device  *</RETURNS>
struct udev *udev, char type, dev_t devnum 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_new_from_subsystem_sysname</NAME>
<RETURNS>struct udev_device  *</RETURNS>
struct udev *udev, const char *subsystem, const char *sysname 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_new_from_device_id</NAME>
<RETURNS>struct udev_device  *</RETURNS>
struct udev *udev, const char *id 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_new_from_environment</NAME>
<RETURNS>struct udev_device  *</RETURNS>
struct udev *udev 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_get_parent</NAME>
<RETURNS>struct udev_device  *</RETURNS>
struct udev_device *udev_device 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_get_parent_with_subsystem_devtype</NAME>
<RETURNS>struct udev_device  *</RETURNS>
struct udev_device *udev_device, const char *subsystem, const char *devtype 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_get_devpath</NAME>
<RETURNS>const char  *</RETURNS>
struct udev_device *udev_device 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_get_subsystem</NAME>
<RETURNS>const char  *</RETURNS>
struct udev_device *udev_device 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_get_devtype</NAME>
<RETURNS>const char  *</RETURNS>
struct udev_device *udev_device 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_get_syspath</NAME>
<RETURNS>const char  *</RETURNS>
struct udev_device *udev_device 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_get_sysname</NAME>
<RETURNS>const char  *</RETURNS>
struct udev_device *udev_device 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_get_sysnum</NAME>
<RETURNS>const char  *</RETURNS>
struct udev_device *udev_device 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_get_devnode</NAME>
<RETURNS>const char  *</RETURNS>
struct udev_device *udev_device 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_get_is_initialized</NAME>
<RETURNS>int  </RETURNS>
struct udev_device *udev_device 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_get_devlinks_list_entry</NAME>
<RETURNS>struct udev_list_entry  *</RETURNS>
struct udev_device *udev_device 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_get_properties_list_entry</NAME>
<RETURNS>struct udev_list_entry  *</RETURNS>
struct udev_device *udev_device 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_get_tags_list_entry</NAME>
<RETURNS>struct udev_list_entry  *</RETURNS>
struct udev_device *udev_device 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_get_sysattr_list_entry</NAME>
<RETURNS>struct udev_list_entry  *</RETURNS>
struct udev_device *udev_device 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_get_property_value</NAME>
<RETURNS>const char  *</RETURNS>
struct udev_device *udev_device, const char *key 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_get_driver</NAME>
<RETURNS>const char  *</RETURNS>
struct udev_device *udev_device 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_get_devnum</NAME>
<RETURNS>dev_t  </RETURNS>
struct udev_device *udev_device 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_get_action</NAME>
<RETURNS>const char  *</RETURNS>
struct udev_device *udev_device 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_get_seqnum</NAME>
<RETURNS>unsigned long long int  </RETURNS>
struct udev_device *udev_device 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_get_usec_since_initialized</NAME>
<RETURNS>unsigned long long int  </RETURNS>
struct udev_device *udev_device 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_get_sysattr_value</NAME>
<RETURNS>const char  *</RETURNS>
struct udev_device *udev_device, const char *sysattr 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_set_sysattr_value</NAME>
<RETURNS>int  </RETURNS>
struct udev_device *udev_device, const char *sysattr, char *value 
</FUNCTION>
<FUNCTION>
<NAME>udev_device_has_tag</NAME>
<RETURNS>int  </RETURNS>
struct udev_device *udev_device, const char *tag 
</FUNCTION>
<FUNCTION>
<NAME>udev_monitor_ref</NAME>
<RETURNS>struct udev_monitor  *</RETURNS>
struct udev_monitor *udev_monitor 
</FUNCTION>
<FUNCTION>
<NAME>udev_monitor_unref</NAME>
<RETURNS>struct udev_monitor  *</RETURNS>
struct udev_monitor *udev_monitor 
</FUNCTION>
<FUNCTION>
<NAME>udev_monitor_get_udev</NAME>
<RETURNS>struct udev  *</RETURNS>
struct udev_monitor *udev_monitor 
</FUNCTION>
<FUNCTION>
<NAME>udev_monitor_new_from_netlink</NAME>
<RETURNS>struct udev_monitor  *</RETURNS>
struct udev *udev, const char *name 
</FUNCTION>
<FUNCTION>
<NAME>udev_monitor_enable_receiving</NAME>
<RETURNS>int  </RETURNS>
struct udev_monitor *udev_monitor 
</FUNCTION>
<FUNCTION>
<NAME>udev_monitor_set_receive_buffer_size</NAME>
<RETURNS>int  </RETURNS>
struct udev_monitor *udev_monitor, int size 
</FUNCTION>
<FUNCTION>
<NAME>udev_monitor_get_fd</NAME>
<RETURNS>int  </RETURNS>
struct udev_monitor *udev_monitor 
</FUNCTION>
<FUNCTION>
<NAME>udev_monitor_receive_device</NAME>
<RETURNS>struct udev_device  *</RETURNS>
struct udev_monitor *udev_monitor 
</FUNCTION>
<FUNCTION>
<NAME>udev_monitor_filter_add_match_subsystem_devtype</NAME>
<RETURNS>int  </RETURNS>
struct udev_monitor *udev_monitor, const char *subsystem, const char *devtype 
</FUNCTION>
<FUNCTION>
<NAME>udev_monitor_filter_add_match_tag</NAME>
<RETURNS>int  </RETURNS>
struct udev_monitor *udev_monitor, const char *tag 
</FUNCTION>
<FUNCTION>
<NAME>udev_monitor_filter_update</NAME>
<RETURNS>int  </RETURNS>
struct udev_monitor *udev_monitor 
</FUNCTION>
<FUNCTION>
<NAME>udev_monitor_filter_remove</NAME>
<RETURNS>int  </RETURNS>
struct udev_monitor *udev_monitor 
</FUNCTION>
<FUNCTION>
<NAME>udev_enumerate_ref</NAME>
<RETURNS>struct udev_enumerate  *</RETURNS>
struct udev_enumerate *udev_enumerate 
</FUNCTION>
<FUNCTION>
<NAME>udev_enumerate_unref</NAME>
<RETURNS>struct udev_enumerate  *</RETURNS>
struct udev_enumerate *udev_enumerate 
</FUNCTION>
<FUNCTION>
<NAME>udev_enumerate_get_udev</NAME>
<RETURNS>struct udev  *</RETURNS>
struct udev_enumerate *udev_enumerate 
</FUNCTION>
<FUNCTION>
<NAME>udev_enumerate_new</NAME>
<RETURNS>struct udev_enumerate  *</RETURNS>
struct udev *udev 
</FUNCTION>
<FUNCTION>
<NAME>udev_enumerate_add_match_subsystem</NAME>
<RETURNS>int  </RETURNS>
struct udev_enumerate *udev_enumerate, const char *subsystem 
</FUNCTION>
<FUNCTION>
<NAME>udev_enumerate_add_nomatch_subsystem</NAME>
<RETURNS>int  </RETURNS>
struct udev_enumerate *udev_enumerate, const char *subsystem 
</FUNCTION>
<FUNCTION>
<NAME>udev_enumerate_add_match_sysattr</NAME>
<RETURNS>int  </RETURNS>
struct udev_enumerate *udev_enumerate, const char *sysattr, const char *value 
</FUNCTION>
<FUNCTION>
<NAME>udev_enumerate_add_nomatch_sysattr</NAME>
<RETURNS>int  </RETURNS>
struct udev_enumerate *udev_enumerate, const char *sysattr, const char *value 
</FUNCTION>
<FUNCTION>
<NAME>udev_enumerate_add_match_property</NAME>
<RETURNS>int  </RETURNS>
struct udev_enumerate *udev_enumerate, const char *property, const char *value 
</FUNCTION>
<FUNCTION>
<NAME>udev_enumerate_add_match_sysname</NAME>
<RETURNS>int  </RETURNS>
struct udev_enumerate *udev_enumerate, const char *sysname 
</FUNCTION>
<FUNCTION>
<NAME>udev_enumerate_add_match_tag</NAME>
<RETURNS>int  </RETURNS>
struct udev_enumerate *udev_enumerate, const char *tag 
</FUNCTION>
<FUNCTION>
<NAME>udev_enumerate_add_match_parent</NAME>
<RETURNS>int  </RETURNS>
struct udev_enumerate *udev_enumerate, struct udev_device *parent 
</FUNCTION>
<FUNCTION>
<NAME>udev_enumerate_add_match_is_initialized</NAME>
<RETURNS>int  </RETURNS>
struct udev_enumerate *udev_enumerate 
</FUNCTION>
<FUNCTION>
<NAME>udev_enumerate_add_syspath</NAME>
<RETURNS>int  </RETURNS>
struct udev_enumerate *udev_enumerate, const char *syspath 
</FUNCTION>
<FUNCTION>
<NAME>udev_enumerate_scan_devices</NAME>
<RETURNS>int  </RETURNS>
struct udev_enumerate *udev_enumerate 
</FUNCTION>
<FUNCTION>
<NAME>udev_enumerate_scan_subsystems</NAME>
<RETURNS>int  </RETURNS>
struct udev_enumerate *udev_enumerate 
</FUNCTION>
<FUNCTION>
<NAME>udev_enumerate_get_list_entry</NAME>
<RETURNS>struct udev_list_entry  *</RETURNS>
struct udev_enumerate *udev_enumerate 
</FUNCTION>
<FUNCTION>
<NAME>udev_queue_ref</NAME>
<RETURNS>struct udev_queue  *</RETURNS>
struct udev_queue *udev_queue 
</FUNCTION>
<FUNCTION>
<NAME>udev_queue_unref</NAME>
<RETURNS>struct udev_queue  *</RETURNS>
struct udev_queue *udev_queue 
</FUNCTION>
<FUNCTION>
<NAME>udev_queue_get_udev</NAME>
<RETURNS>struct udev  *</RETURNS>
struct udev_queue *udev_queue 
</FUNCTION>
<FUNCTION>
<NAME>udev_queue_new</NAME>
<RETURNS>struct udev_queue  *</RETURNS>
struct udev *udev 
</FUNCTION>
<FUNCTION>
<NAME>udev_queue_get_kernel_seqnum</NAME>
<RETURNS>unsigned long long int  </RETURNS>
struct udev_queue *udev_queue 
</FUNCTION>
<FUNCTION>
<NAME>udev_queue_get_udev_seqnum</NAME>
<RETURNS>unsigned long long int  </RETURNS>
struct udev_queue *udev_queue 
</FUNCTION>
<FUNCTION>
<NAME>udev_queue_get_udev_is_active</NAME>
<RETURNS>int  </RETURNS>
struct udev_queue *udev_queue 
</FUNCTION>
<FUNCTION>
<NAME>udev_queue_get_queue_is_empty</NAME>
<RETURNS>int  </RETURNS>
struct udev_queue *udev_queue 
</FUNCTION>
<FUNCTION>
<NAME>udev_queue_get_seqnum_is_finished</NAME>
<RETURNS>int  </RETURNS>
struct udev_queue *udev_queue, unsigned long long int seqnum 
</FUNCTION>
<FUNCTION>
<NAME>udev_queue_get_seqnum_sequence_is_finished</NAME>
<RETURNS>int  </RETURNS>
struct udev_queue *udev_queue, unsigned long long int start, unsigned long long int end 
</FUNCTION>
<FUNCTION>
<NAME>udev_queue_get_queued_list_entry</NAME>
<RETURNS>struct udev_list_entry  *</RETURNS>
struct udev_queue *udev_queue 
</FUNCTION>
<FUNCTION>
<NAME>udev_hwdb_new</NAME>
<RETURNS>struct udev_hwdb  *</RETURNS>
struct udev *udev 
</FUNCTION>
<FUNCTION>
<NAME>udev_hwdb_ref</NAME>
<RETURNS>struct udev_hwdb  *</RETURNS>
struct udev_hwdb *hwdb 
</FUNCTION>
<FUNCTION>
<NAME>udev_hwdb_unref</NAME>
<RETURNS>struct udev_hwdb  *</RETURNS>
struct udev_hwdb *hwdb 
</FUNCTION>
<FUNCTION>
<NAME>udev_hwdb_get_properties_list_entry</NAME>
<RETURNS>struct udev_list_entry  *</RETURNS>
struct udev_hwdb *hwdb, const char *modalias, unsigned int flags 
</FUNCTION>
<FUNCTION>
<NAME>udev_util_encode_string</NAME>
<RETURNS>int  </RETURNS>
const char *str, char *str_enc, size_t len 
</FUNCTION>
<STRUCT>
<NAME>udev_monitor</NAME>
struct udev_monitor;
</STRUCT>
<STRUCT>
<NAME>udev</NAME>
struct udev;
</STRUCT>
<STRUCT>
<NAME>udev_device</NAME>
struct udev_device;
</STRUCT>
<STRUCT>
<NAME>udev_hwdb</NAME>
struct udev_hwdb;
</STRUCT>
<STRUCT>
<NAME>udev_enumerate</NAME>
struct udev_enumerate;
</STRUCT>
<STRUCT>
<NAME>udev_list_entry</NAME>
struct udev_list_entry;
</STRUCT>
<STRUCT>
<NAME>udev_queue</NAME>
struct udev_queue;
</STRUCT>
